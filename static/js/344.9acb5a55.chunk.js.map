{"version":3,"file":"static/js/344.9acb5a55.chunk.js","mappings":"sPACA,EAAwB,oB,2BC2CxB,EArCa,WACX,OAA4CA,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MAqBjB,OApBAC,EAAAA,EAAAA,YAAU,WACR,IACEH,GAAW,GACX,IAAMI,EAAS,mCAAG,qGACKC,EAAAA,EAAAA,MADL,OACVC,EADU,OAEhBV,EAAkBU,GAFF,2CAAH,qDAKfF,GASD,CARC,MAAOP,GACHA,EAAMU,UAAYV,EAAMU,SAASC,OACnCV,GAAS,EAIZ,CAdD,QAeEE,GAAW,EACZ,CACF,GAAE,KAGD,gCACGD,IAAa,SAACU,EAAA,EAAD,IACbZ,IAAS,eAAIa,UAAWC,EAAf,oCACV,eAAID,UAAWC,EAAf,4BACChB,EAAeiB,OAAS,IACvB,SAACC,EAAA,EAAD,CAAYP,OAAQX,EAAgBmB,MAAO,CAAEC,KAAMd,OAI1D,C,+LCxCYI,EAAmB,mCAAG,4FACrB,gDACA,mCAENW,EAAU,IAAIC,gBAAgB,CAClCC,QAHU,qCAFqB,kBAQFC,EAAAA,EAAAA,IAAA,UAPnB,gDAOmB,YAAoBH,IARlB,cAQzBI,EARyB,yBASxBA,EAAeC,KAAKC,SATI,kCAW/BC,QAAQC,IAAR,MAX+B,0DAAH,qDAgBnBC,EAAc,mCAAG,WAAOC,GAAP,kFACtBC,EADsB,6CACsBD,GACtC,mCAENV,EAAU,IAAIC,gBAAgB,CAClCC,QAHU,qCAFgB,kBASNC,EAAAA,EAAAA,IAAA,UAAaQ,EAAb,YAAoBX,IATd,cASpBY,EAToB,yBAUnBA,GAVmB,kCAY1BL,QAAQC,IAAR,MAZ0B,0DAAH,sDAkBdK,EAAc,mCAAG,WAAOH,GAAP,kFACtBC,EADsB,6CACsBD,EADtB,YAEhB,mCAENV,EAAU,IAAIC,gBAAgB,CAClCC,QAHU,qCAFgB,kBASNC,EAAAA,EAAAA,IAAA,UAAaQ,EAAb,YAAoBX,IATd,cASpBY,EAToB,yBAUnBA,EAAMP,MAVa,kCAY1BE,QAAQC,IAAR,MAZ0B,0DAAH,sDAgBdM,EAAiB,mCAAG,WAAOJ,GAAP,kFACzBC,EADyB,6CACmBD,EADnB,YAEnB,mCAENV,EAAU,IAAIC,gBAAgB,CAClCC,QAHU,qCAFmB,kBASTC,EAAAA,EAAAA,IAAA,UAAaQ,EAAb,YAAoBX,IATX,cASvBY,EATuB,yBAUtBA,EAAMP,MAVgB,kCAY7BE,QAAQC,IAAR,MAZ6B,0DAAH,sDAgBjBO,EAAiB,mCAAG,WAAMC,GAAN,2HAEnB,mCAENhB,EAAU,IAAIC,gBAAgB,CAClCC,QAHU,mCAIVe,MAAOD,IANsB,kBAUTb,EAAAA,EAAAA,IAAA,UAVS,4CAUT,YAAoBH,IAVX,cAUvBY,EAVuB,yBAWtBA,EAAMP,KAAKC,SAXW,kCAa7BC,QAAQC,IAAR,MAb6B,0DAAH,qD,sDCnE9B,MAAuB,yB,iBCoBvB,EAjBmB,SAAC,GAAuB,IAArBlB,EAAoB,EAApBA,OAAQQ,EAAY,EAAZA,MAC5B,OACE,eAAIJ,UAAWC,EAAf,SACGL,EAAO4B,KAAI,SAAAN,GAAU,IAAD,EACbO,EAAK,UAAGP,EAAMO,aAAT,QAAkBP,EAAMQ,KACnC,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaT,EAAMF,IAAMZ,MAAO,CAAEC,KAAMD,EAAMC,MAAtD,SACGoB,KAFIP,EAAMF,GAMlB,KAGN,C","sources":["webpack://react-homework-template/./src/Pages/Home/Home.module.css?51fa","Pages/Home/Home.jsx","Services/FetchMovies.jsx","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Home_title__FBeIP\",\"list\":\"Home_list__H0zhY\"};","import { fetchTrendingMovies } from '../../Services/FetchMovies';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport css from './Home.module.css';\nimport MoviesList from '../../components/MoviesList/MoviesList';\nimport { Loader } from '../../components/Loader/Loader';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const location = useLocation();\n  useEffect(() => {\n    try {\n      setLoading(true);\n      const getMovies = async () => {\n        const movies = await fetchTrendingMovies();\n        setTrendingMovies(movies);\n      };\n\n      getMovies();\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        setError(true);\n      } else {\n        setError(true);\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <h2 className={css.title}>No data from services</h2>}\n      <h2 className={css.title}>Trending today</h2>\n      {trendingMovies.length > 0 && (\n        <MoviesList movies={trendingMovies} state={{ from: location }} />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nexport const fetchTrendingMovies = async () => {\n  const URL = 'https://api.themoviedb.org/3/trending/all/day';\n  const KEY = '3a46a7267a5317e24c5053073610996d';\n\n  const options = new URLSearchParams({\n    api_key: KEY,\n  });\n  try {\n    const TrendingMovies = await axios.get(`${URL}?${options}`);\n    return TrendingMovies.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n\nexport const fetchMovieById = async (id) => {\n  const URL = `https://api.themoviedb.org/3/movie/${id}`;\n  const KEY = '3a46a7267a5317e24c5053073610996d';\n\n  const options = new URLSearchParams({\n    api_key: KEY,\n  });\n\n  try {\n    const movie = await axios.get(`${URL}?${options}`);\n    return movie;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n\n\nexport const fetchMovieCast = async (id) => {\n  const URL = `https://api.themoviedb.org/3/movie/${id}/credits`;\n  const KEY = '3a46a7267a5317e24c5053073610996d';\n\n  const options = new URLSearchParams({\n    api_key: KEY,\n  });\n\n  try {\n    const movie = await axios.get(`${URL}?${options}`);\n    return movie.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieReviews = async (id) => {\n  const URL = `https://api.themoviedb.org/3/movie/${id}/reviews`;\n  const KEY = '3a46a7267a5317e24c5053073610996d';\n\n  const options = new URLSearchParams({\n    api_key: KEY,\n  });\n\n  try {\n    const movie = await axios.get(`${URL}?${options}`);\n    return movie.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchSearchMovies = async search => {\n  const URL = `https://api.themoviedb.org/3/search/movie`;\n  const KEY = '3a46a7267a5317e24c5053073610996d';\n\n  const options = new URLSearchParams({\n    api_key: KEY,\n    query: search,\n  });\n\n  try {\n    const movie = await axios.get(`${URL}?${options}`);\n    return movie.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__0Owr9\"};","import PropTypes from 'prop-types';\nimport css from './MoviesList.module.css';\nimport { Link } from 'react-router-dom';\n\nconst MoviesList = ({ movies, state }) => {\n  return (\n    <ul className={css.list}>\n      {movies.map(movie => {\n        const title = movie.title ?? movie.name;\n        return (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: state.from }}>\n              {title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ).isRequired,\n  state: PropTypes.shape({\n    from: PropTypes.string,\n  }),\n};"],"names":["useState","trendingMovies","setTrendingMovies","error","setError","isLoading","setLoading","location","useLocation","useEffect","getMovies","fetchTrendingMovies","movies","response","status","Loader","className","css","length","MoviesList","state","from","options","URLSearchParams","api_key","axios","TrendingMovies","data","results","console","log","fetchMovieById","id","URL","movie","fetchMovieCast","fetchMovieReviews","fetchSearchMovies","search","query","map","title","name","to"],"sourceRoot":""}