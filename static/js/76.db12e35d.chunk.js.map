{"version":3,"file":"static/js/76.db12e35d.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/Pages/MovieDetails/MovieDetails.module.css?f582","Pages/MovieDetails/MovieDetails.jsx","Services/FetchMovies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie_box\":\"MovieDetails_movie_box__tbZdh\",\"info_box\":\"MovieDetails_info_box__WPhK-\",\"button\":\"MovieDetails_button__9VA3h\",\"additional\":\"MovieDetails_additional__LCjDA\",\"additional_list\":\"MovieDetails_additional_list__1U7tR\"};","import { fetchMovieById } from '../../Services/FetchMovies';\nimport { Loader } from '../../components/Loader/Loader';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Outlet } from 'react-router-dom';\nimport css from './MovieDetails.module.css';\nimport noImages from '../../components/Image/NoImage.jpg';\n\nconst IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w200/';\nlet genres = '';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLocation = useRef(location.state?.from ?? '/movies');\n  const [error, setError] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    const getMovie = async () => {\n      try {\n        const movieInfo = await fetchMovieById(movieId);\n        genres = movieInfo.data.genres.map(genre => genre.name).join(' ');\n        setMovie(movieInfo.data);\n      } catch (error) {\n        if (error.response && error.response.status === 404) {\n          setError(true);\n        } else {\n          setError(true);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getMovie();\n  }, [movieId]);\n\n  const releaseYear = new Date(movie.release_date).getFullYear();\n  const userScore = Math.floor(movie.vote_average * 10);\n\n  return (\n    <div>\n      <Link to={backLocation.current} className={css.button}>\n        Go back\n      </Link>\n      {isLoading && <Loader />}\n      {!isLoading && (\n        <div>\n          {error ? (\n            <h2>No information for this movie</h2>\n          ) : (\n            <>\n              <div className={css.movie_box}>\n                <div className={css.img_box}>\n                  <img\n                    src={\n                      movie.poster_path\n                        ? IMAGES_BASE_URL + movie.poster_path\n                        : noImages\n                    }\n                    alt={movie.title}\n                  />\n                </div>\n                <div className={css.info_box}>\n                  <h2>\n                    {movie.title} ({releaseYear})\n                  </h2>\n                  <p>User Score: {userScore} %</p>\n                  <h3>Overview</h3>\n                  <p>{movie.overview}</p>\n                  <h4>Genres</h4>\n                  <p>{genres}</p>\n                </div>\n              </div>\n              <div className={css.additional}>\n                <h4>Additional information</h4>\n                <ul className={css.additional_list}>\n                  <li>\n                    <Link to=\"cast\">Cast</Link>\n                  </li>\n                  <li>\n                    <Link to=\"reviews\">Reviews</Link>\n                  </li>\n                </ul>\n              </div>\n\n              <Suspense fallback={<Loader />}>\n                <Outlet />\n              </Suspense>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;","import axios from 'axios';\n\nexport const fetchTrendingMovies = async () => {\n  const URL = 'https://api.themoviedb.org/3/trending/all/day';\n  const KEY = 'efcd079eaa7382b8a49b8fa3c0261e85';\n\n  const options = new URLSearchParams({\n    api_key: KEY,\n  });\n  try {\n    const TrendingMovies = await axios.get(`${URL}?${options}`);\n    return TrendingMovies.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n\nexport const fetchMovieById = async (id) => {\n  const URL = `https://api.themoviedb.org/3/movie/${id}`;\n  const KEY = 'efcd079eaa7382b8a49b8fa3c0261e85';\n\n  const options = new URLSearchParams({\n    api_key: KEY,\n  });\n\n  try {\n    const movie = await axios.get(`${URL}?${options}`);\n    return movie;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n\n\nexport const fetchMovieCast = async (id) => {\n  const URL = `https://api.themoviedb.org/3/movie/${id}/credits`;\n  const KEY = 'efcd079eaa7382b8a49b8fa3c0261e85';\n\n  const options = new URLSearchParams({\n    api_key: KEY,\n  });\n\n  try {\n    const movie = await axios.get(`${URL}?${options}`);\n    return movie.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieReviews = async (id) => {\n  const URL = `https://api.themoviedb.org/3/movie/${id}/reviews`;\n  const KEY = 'efcd079eaa7382b8a49b8fa3c0261e85';\n\n  const options = new URLSearchParams({\n    api_key: KEY,\n  });\n\n  try {\n    const movie = await axios.get(`${URL}?${options}`);\n    return movie.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchSearchMovies = async search => {\n  const URL = `https://api.themoviedb.org/3/search/movie`;\n  const KEY = '3a46a7267a5317e24c5053073610996d';\n\n  const options = new URLSearchParams({\n    api_key: KEY,\n    query: search,\n  });\n\n  try {\n    const movie = await axios.get(`${URL}?${options}`);\n    return movie.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n"],"names":["genres","useState","movie","setMovie","movieId","useParams","location","useLocation","backLocation","useRef","state","from","error","setError","isLoading","setLoading","useEffect","getMovie","fetchMovieById","movieInfo","data","map","genre","name","join","response","status","releaseYear","Date","release_date","getFullYear","userScore","Math","floor","vote_average","to","current","className","css","Loader","src","poster_path","noImages","alt","title","overview","Suspense","fallback","fetchTrendingMovies","options","URLSearchParams","api_key","axios","TrendingMovies","results","console","log","id","URL","fetchMovieCast","fetchMovieReviews","fetchSearchMovies","search","query"],"sourceRoot":""}