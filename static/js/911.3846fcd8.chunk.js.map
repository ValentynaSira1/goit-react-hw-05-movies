{"version":3,"file":"static/js/911.3846fcd8.chunk.js","mappings":"gRACA,EAAwB,sBAAxB,EAAuD,uB,kBCkFvD,EA3Ee,WACb,OAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAA0BN,EAAAA,EAAAA,WAAS,GAAnC,eAAOO,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAASb,EAAac,IAAI,UAShCC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAGA,IAAMG,EAAW,mCAAG,oGAEhBR,GAAW,GAFK,UAGaS,EAAAA,EAAAA,IAAkBJ,GAH/B,UAIc,KADxBK,EAHU,QAIGC,OAJH,yCAKPC,EAAAA,GAAAA,MAAA,+BAAoCP,EAApC,OALO,OAOhBT,EAAUc,GAPM,kDASZ,KAAMG,UAAY,KAAMA,SAASC,OACnCZ,GAAS,GAVK,yBAehBF,GAAW,GAfK,6EAAH,qDAkBjBQ,GAnBC,CAoBF,GAAE,CAACH,IAWJ,OACE,4BACE,kBAAMU,SAXW,SAAAC,GAEnB,GADAA,EAAEC,iBACa,KAAXpB,EACF,OAAOe,EAAAA,GAAAA,MAAA,6BAGTnB,EAAgB,CAAEyB,MAAOrB,GAC1B,EAIG,WACE,kBACEsB,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,SAjDa,SAAAP,GACnBlB,EAAUkB,EAAEQ,OAAOC,MAAMC,QACF,KAAnBV,EAAEQ,OAAOC,OACXhC,EAAgB,CAAC,EAEpB,EA6COgC,MAAO5B,EACP8B,UAAWC,KAEb,mBAAQT,KAAK,SAASQ,UAAWC,EAAjC,uBAID7B,IAAa,SAAC8B,EAAA,EAAD,IACb5B,IAAS,kDACTN,EAAOgB,OAAS,GAAKN,IACpB,SAACyB,EAAA,EAAD,CAAYnC,OAAQA,EAAQoC,MAAO,CAAEC,KAAM7B,OAIlD,C,+LC/EY8B,EAAmB,mCAAG,4FACrB,gDACA,mCAENC,EAAU,IAAIC,gBAAgB,CAClCC,QAHU,qCAFqB,kBAQFC,EAAAA,EAAAA,IAAA,UAPnB,gDAOmB,YAAoBH,IARlB,cAQzBI,EARyB,yBASxBA,EAAeC,KAAKC,SATI,kCAW/BC,QAAQC,IAAR,MAX+B,0DAAH,qDAgBnBC,EAAc,mCAAG,WAAOC,GAAP,kFACtBC,EADsB,6CACsBD,GACtC,mCAENV,EAAU,IAAIC,gBAAgB,CAClCC,QAHU,qCAFgB,kBASNC,EAAAA,EAAAA,IAAA,UAAaQ,EAAb,YAAoBX,IATd,cASpBY,EAToB,yBAUnBA,GAVmB,kCAY1BL,QAAQC,IAAR,MAZ0B,0DAAH,sDAkBdK,EAAc,mCAAG,WAAOH,GAAP,kFACtBC,EADsB,6CACsBD,EADtB,YAEhB,mCAENV,EAAU,IAAIC,gBAAgB,CAClCC,QAHU,qCAFgB,kBASNC,EAAAA,EAAAA,IAAA,UAAaQ,EAAb,YAAoBX,IATd,cASpBY,EAToB,yBAUnBA,EAAMP,MAVa,kCAY1BE,QAAQC,IAAR,MAZ0B,0DAAH,sDAgBdM,EAAiB,mCAAG,WAAOJ,GAAP,kFACzBC,EADyB,6CACmBD,EADnB,YAEnB,mCAENV,EAAU,IAAIC,gBAAgB,CAClCC,QAHU,qCAFmB,kBASTC,EAAAA,EAAAA,IAAA,UAAaQ,EAAb,YAAoBX,IATX,cASvBY,EATuB,yBAUtBA,EAAMP,MAVgB,kCAY7BE,QAAQC,IAAR,MAZ6B,0DAAH,sDAgBjBjC,EAAiB,mCAAG,WAAMZ,GAAN,2HAEnB,mCAENqC,EAAU,IAAIC,gBAAgB,CAClCC,QAHU,mCAIVlB,MAAOrB,IANsB,kBAUTwC,EAAAA,EAAAA,IAAA,UAVS,4CAUT,YAAoBH,IAVX,cAUvBY,EAVuB,yBAWtBA,EAAMP,KAAKC,SAXW,kCAa7BC,QAAQC,IAAR,MAb6B,0DAAH,qD,sDCnE9B,MAAuB,yB,iBCoBvB,EAjBmB,SAAC,GAAuB,IAArB/C,EAAoB,EAApBA,OAAQoC,EAAY,EAAZA,MAC5B,OACE,eAAIJ,UAAWC,EAAf,SACGjC,EAAOsD,KAAI,SAAAH,GAAU,IAAD,EACbI,EAAK,UAAGJ,EAAMI,aAAT,QAAkBJ,EAAMK,KACnC,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaN,EAAMF,IAAMb,MAAO,CAAEC,KAAMD,EAAMC,MAAtD,SACGkB,KAFIJ,EAAMF,GAMlB,KAGN,C","sources":["webpack://react-homework-template/./src/Pages/Movies/Movies.module.css?d262","Pages/Movies/Movies.jsx","Services/FetchMovies.jsx","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Movies_input__mpzwV\",\"button\":\"Movies_button__sRc5b\"};","import { fetchSearchMovies } from '../../Services/FetchMovies';\nimport { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport MoviesList from '../../components/MoviesList/MoviesList';\nimport css from './Movies.module.css';\nimport { Loader } from '../../components/Loader/Loader';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [search, setSearch] = useState('');\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const location = useLocation();\n  const params = searchParams.get('query');\n\n  const handleChange = e => {\n    setSearch(e.target.value.trim());\n    if (e.target.value === '') {\n      setSearchParams({});\n    }\n  };\n\n  useEffect(() => {\n    if (!params) {\n      return;\n    }\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n        const searchedMovies = await fetchSearchMovies(params);\n        if (searchedMovies.length === 0) {\n          return toast.error(`No movies found for '${params}'`);\n        }\n        setMovies(searchedMovies);\n      } catch (error) {\n        if (error.response && error.response.status === 404) {\n          setError(true);\n        } else {\n          setError(true);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [params]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (search === '') {\n      return toast.error(`Please enter a movie name`);\n    }\n\n    setSearchParams({ query: search });\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          onChange={handleChange}\n          value={search}\n          className={css.input}\n        />\n        <button type=\"submit\" className={css.button}>\n          Search\n        </button>\n      </form>\n      {isLoading && <Loader />}\n      {error && <h2>No data from services</h2>}\n      {movies.length > 0 && params && (\n        <MoviesList movies={movies} state={{ from: location }} />\n      )}\n    </div>\n  );\n};\n\nexport default Movies;","import axios from 'axios';\n\nexport const fetchTrendingMovies = async () => {\n  const URL = 'https://api.themoviedb.org/3/trending/all/day';\n  const KEY = '3a46a7267a5317e24c5053073610996d';\n\n  const options = new URLSearchParams({\n    api_key: KEY,\n  });\n  try {\n    const TrendingMovies = await axios.get(`${URL}?${options}`);\n    return TrendingMovies.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n\nexport const fetchMovieById = async (id) => {\n  const URL = `https://api.themoviedb.org/3/movie/${id}`;\n  const KEY = '3a46a7267a5317e24c5053073610996d';\n\n  const options = new URLSearchParams({\n    api_key: KEY,\n  });\n\n  try {\n    const movie = await axios.get(`${URL}?${options}`);\n    return movie;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n\n\nexport const fetchMovieCast = async (id) => {\n  const URL = `https://api.themoviedb.org/3/movie/${id}/credits`;\n  const KEY = '3a46a7267a5317e24c5053073610996d';\n\n  const options = new URLSearchParams({\n    api_key: KEY,\n  });\n\n  try {\n    const movie = await axios.get(`${URL}?${options}`);\n    return movie.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieReviews = async (id) => {\n  const URL = `https://api.themoviedb.org/3/movie/${id}/reviews`;\n  const KEY = '3a46a7267a5317e24c5053073610996d';\n\n  const options = new URLSearchParams({\n    api_key: KEY,\n  });\n\n  try {\n    const movie = await axios.get(`${URL}?${options}`);\n    return movie.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchSearchMovies = async search => {\n  const URL = `https://api.themoviedb.org/3/search/movie`;\n  const KEY = '3a46a7267a5317e24c5053073610996d';\n\n  const options = new URLSearchParams({\n    api_key: KEY,\n    query: search,\n  });\n\n  try {\n    const movie = await axios.get(`${URL}?${options}`);\n    return movie.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__0Owr9\"};","import PropTypes from 'prop-types';\nimport css from './MoviesList.module.css';\nimport { Link } from 'react-router-dom';\n\nconst MoviesList = ({ movies, state }) => {\n  return (\n    <ul className={css.list}>\n      {movies.map(movie => {\n        const title = movie.title ?? movie.name;\n        return (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: state.from }}>\n              {title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ).isRequired,\n  state: PropTypes.shape({\n    from: PropTypes.string,\n  }),\n};"],"names":["useSearchParams","searchParams","setSearchParams","useState","movies","setMovies","search","setSearch","isLoading","setLoading","error","setError","location","useLocation","params","get","useEffect","fetchMovies","fetchSearchMovies","searchedMovies","length","toast","response","status","onSubmit","e","preventDefault","query","type","autoComplete","autoFocus","placeholder","onChange","target","value","trim","className","css","Loader","MoviesList","state","from","fetchTrendingMovies","options","URLSearchParams","api_key","axios","TrendingMovies","data","results","console","log","fetchMovieById","id","URL","movie","fetchMovieCast","fetchMovieReviews","map","title","name","to"],"sourceRoot":""}